# current_value = seed
        
        # for column_index in range(df.shape[1]):
        #     seed_index = jobs.find_relevant_row_index(df.iloc[:, column_index], current_value)
        #     next_valid_index = jobs.find_next_relevant_row_index(df.iloc[:, column_index], current_value)
        #     change_in_index = next_valid_index - seed_index
        #     current_value = jobs.get_destination_range_start(df.iloc[:, column_index], seed_index, current_value)
        # if current_value < final_value:
        #     final_value = current_value
        # return final_value, change_in_index


# def generate_numbers(seed_nums):
#     seed_nums = [int(num) for num in seed_nums]

#     for i in range(0, len(seed_nums), 2):
#         if i + 1 < len(seed_nums):
#             seed = seed_nums[i]
#             increase_amount = seed_nums[i + 1]
#             for increase in range(increase_amount):
#                 yield seed + increase

# for number in generate_numbers(seed_nums):

